buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'com.diffplug.gradle.spotless' version '3.27.2'
    id 'com.github.spotbugs' version '4.0.8'
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

group 'jadecli'
version '1.0.2'
sourceCompatibility = 1.8
mainClassName = 'bio.terra.Main'

repositories {
    mavenCentral()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
}

// Exclude the Spring logger, so everything will use SLF4J
configurations.all {
    exclude group: "commons-logging", module: "commons-logging"
}

dependencies {
    ext {
        commonsLang3 = "3.9"
        googleApiServicesOauth2 = "v2-rev20190313-1.30.1"
        googleClient = "1.30.7"
        googleCloudStorage = "1.103.1"
        googleOauthClientJetty = "1.30.5"
        jackson = "2.10.2"
        jersey = "2.30.1"
        junit = "4.13"
        hamcrest = "2.2"
        datarepoClient = "1.116.0-SNAPSHOT"
        logback = "1.2.3"
        sl4j = "1.7.30"
        findbugsAnnotations = "3.0.1"
    }

    //implementation files("/Users/ddietterich/code/DR-1523-billing-upgrade/datarepo-client/build/libs/datarepo-client-1.0.169-SNAPSHOT.jar")
    // TODO: this should come from datarepo-client
    //implementation 'org.glassfish.jersey.core:jersey-common:2.26'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:2.26'

    implementation group: "io.swagger.core.v3", name: "swagger-annotations", version: "2.1.5"

    implementation group: 'bio.terra', name: 'datarepo-client', version: "${datarepoClient}"
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: "${commonsLang3}"
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: "${logback}"
    implementation group: 'org.slf4j', name: 'slf4j-api', version: "${sl4j}"

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${jackson}"
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: "${jackson}"

    implementation group: 'com.google.apis', name: 'google-api-services-oauth2', version: "${googleApiServicesOauth2}"
    implementation group: 'com.google.api-client', name: 'google-api-client', version: "${googleClient}"
    implementation group: 'com.google.api-client', name: 'google-api-client-java6', version: "${googleClient}"
    implementation group: 'com.google.cloud', name: 'google-cloud-storage', version: "${googleCloudStorage}"
    implementation group: 'com.google.oauth-client', name: 'google-oauth-client-jetty', version: "${googleOauthClientJetty}"

    // Findbugs annotations, so we can selectively suppress findbugs findings
    implementation group: 'com.google.code.findbugs', name: 'annotations', version: "${findbugsAnnotations}"

    testImplementation group: 'junit', name: 'junit', version: "${junit}"
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: "${hamcrest}"
}

test {
    testLogging {
        showStandardStreams = true // set to true to disable stdout & stderr redirection
    }
    exclude '**/CLICommandTests.class'
}

task testCLIUnit(type: Test) {
    useJUnit {
        includeCategories 'bio.terra.common.category.CLIUnit'
    }
    outputs.upToDateWhen { false }
}

task testCLIIntegrated(type: Test) {
    useJUnit {
        includeCategories 'bio.terra.common.category.CLIIntegrated'
    }
    outputs.upToDateWhen { false }
}

spotless {
    java {
        googleJavaFormat()
    }
}

spotbugs {
    effort = 'max'
    // This makes the "html" reports come out in plain text so you can just open the file in IntelliJ
    // and look at your bugs instead of having to switch to a browser.
    extraArgs = [ '-emacs']
}
spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main.txt")
            stylesheet = 'fancy.xsl'
        }
    }
}
spotbugsTest {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/test.txt")
            stylesheet = 'fancy.xsl'
        }
    }
}

compileJava.dependsOn tasks.spotlessApply

