buildscript {
    ext {
        swagger = "2.3.1"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("io.swagger:swagger-codegen:${swagger}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile('config/findbugs/plain.xsl')
    }
}

group 'jadecli'
version '0.1'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
}

configurations {
    generatedCompile
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

// Exclude the Spring logger, so everything will use SLF4J
configurations.all {
    exclude group: "commons-logging", module: "commons-logging"
}

dependencies {
    ext {
        commonsLang3 = "3.9"
        googleApiServicesOauth2 = "v2-rev20190313-1.30.1"
        googleClient = "1.30.7"
        googleCloudStorage = "1.103.1"
        googleOauthClientJetty = "1.30.5"
        jackson = "2.10.2"
        jersey = "2.30.1"
        junit = "4.13"
        swagger = "1.5.22"
        hamcrest = "2.2"
    }
    compile 'bio.terra:datarepo-client:1.0.87-SNAPSHOT'
    compile "org.apache.commons:commons-lang3:${commonsLang3}"
    compile 'ch.qos.logback:logback-classic:1.2.3'       // Logger
    compile 'org.slf4j:slf4j-api:1.7.30'                 // Logging facade

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${jackson}"
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: "${jackson}"

    compile group: 'com.google.apis', name: 'google-api-services-oauth2', version: "${googleApiServicesOauth2}"
    compile group: 'com.google.api-client', name: 'google-api-client', version: "${googleClient}"
    compile group: 'com.google.api-client', name: 'google-api-client-java6', version: "${googleClient}"
    compile "com.google.cloud:google-cloud-storage:${googleCloudStorage}"
    compile group: 'com.google.oauth-client', name: 'google-oauth-client-jetty', version: "${googleOauthClientJetty}"

    // Findbugs annotations, so we can selectively suppress findbugs findings
    compileOnly 'com.google.code.findbugs:annotations:3.0.1'

    testCompile group: 'junit', name: 'junit', version: "${junit}"
    testCompile group: 'org.hamcrest', name: 'hamcrest', version: "${hamcrest}"
}

test {
    testLogging {
        showStandardStreams = true // set to true to disable stdout & stderr redirection
    }
    // TODO: uncomment this once we have a solution for Travis running integration tests that require authentication
    exclude '**/CLICommandTests.class'
}

task testCLIUnit(type: Test) {
    useJUnit {
        includeCategories 'bio.terra.common.category.CLIUnit'
    }
    outputs.upToDateWhen { false }
}

task testCLIIntegrated(type: Test) {
    useJUnit {
        includeCategories 'bio.terra.common.category.CLIIntegrated'
    }
    outputs.upToDateWhen { false }
}

sourceSets {
    main
    test
    checkstyle {
        toolVersion '7.8.1'
        configFile file("config/checkstyle/checkstyle.xml")
    }
    findbugs {
        toolVersion '3.0.1'
        ignoreFailures = false
        excludeFilter = file("config/findbugs/excludeFilter.xml")
        reportsDir = file("$project.buildDir/reports/findbugs")
        effort = "max"
    }
}
mainClassName = 'bio.terra.Main'
