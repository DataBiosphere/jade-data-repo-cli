/*
 * Data Repository API
 * This document defines the REST API for Data Repository. **Status: design in progress**  There are four top-level endpoints (besides some used by swagger):  * /       - generated by swagger: swagger API page that provides this documentation and a live UI for submitting REST requests  * /status - provides the operational status of the service  * /api    - is the authenticated and authorized Data Repository API  * /ga4gh/drs/v1 - is a transcription of the Data Repository Service API  The overall API (/api) currently supports one interface:  * Repository - a general and default interface for initial setup  The API endpoints are organized by interface. Each interface is separately versioned.  ## Notes on Naming All of the reference items are suffixed with \"Model\". Those names are used as the class names in the generated Java code. It is helpful to distinguish these model classes from other related classes, like the DAO classes and the operation classes.  ## Editing and debugging I have found it best to edit this file directly to make changes and then use the swagger-editor to validate. The errors out of swagger-codegen are not that helpful. In the swagger-editor, it gives you nice errors and links to the place in the YAML where the errors are.  But... the swagger-editor has been a bit of a pain for me to run. I tried the online website and was not able to load my YAML. Instead, I run it locally in a docker container, like this: ``` docker pull swaggerapi/swagger-editor docker run -p 9090:8080 swaggerapi/swagger-editor ``` Then navigate to localhost:9090 in your browser.  I have not been able to get the file upload to work. It is a bit of a PITA, but I copy-paste the source code, replacing what is in the editor. Then make any fixes. Then copy-paste the resulting, valid file back into our source code. Not elegant, but easier than playing detective with the swagger-codegen errors.  This might be something about my browser or environment, so give it a try yourself and see how it goes.  ## Merging the DRS standard swagger into this swagger ##  The merging is done in three sections:  1. Merging the security definitions into our security definitions  2. This section of paths. We make all paths explicit (prefixed with /ga4gh/drs/v1)     All standard DRS definitions and parameters are prefixed with 'DRS' to separate them     from our native definitions and parameters. We remove the x-swagger-router-controller lines.  3. A separate part of the definitions section for the DRS definitions 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package bio.terra.datarepo.model;

import java.util.Objects;
import bio.terra.datarepo.model.DRSBundleObject;
import bio.terra.datarepo.model.DRSChecksum;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * DRSBundle
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-12T09:29:10.549-04:00")
public class DRSBundle {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("size")
  private Long size = null;

  @JsonProperty("created")
  private String created = null;

  @JsonProperty("updated")
  private String updated = null;

  @JsonProperty("version")
  private String version = null;

  @JsonProperty("checksums")
  private List<DRSChecksum> checksums = new ArrayList<>();

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("aliases")
  private List<String> aliases = null;

  @JsonProperty("contents")
  private List<DRSBundleObject> contents = new ArrayList<>();

  public DRSBundle id(String id) {
    this.id = id;
    return this;
  }

   /**
   * An identifier, unique to this Data Bundle
   * @return id
  **/
  @ApiModelProperty(required = true, value = "An identifier, unique to this Data Bundle")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DRSBundle name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A string that can be used to name a Data Bundle.
   * @return name
  **/
  @ApiModelProperty(value = "A string that can be used to name a Data Bundle.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DRSBundle size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * The cumulative size of all Data Objects and Bundles listed within contents field in bytes.
   * @return size
  **/
  @ApiModelProperty(required = true, value = "The cumulative size of all Data Objects and Bundles listed within contents field in bytes.")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public DRSBundle created(String created) {
    this.created = created;
    return this;
  }

   /**
   * Timestamp of Bundle creation in RFC3339.
   * @return created
  **/
  @ApiModelProperty(required = true, value = "Timestamp of Bundle creation in RFC3339.")
  public String getCreated() {
    return created;
  }

  public void setCreated(String created) {
    this.created = created;
  }

  public DRSBundle updated(String updated) {
    this.updated = updated;
    return this;
  }

   /**
   * Timestamp of Bundle update in RFC3339, identical to create timestamp in systems that do not support updates.
   * @return updated
  **/
  @ApiModelProperty(value = "Timestamp of Bundle update in RFC3339, identical to create timestamp in systems that do not support updates.")
  public String getUpdated() {
    return updated;
  }

  public void setUpdated(String updated) {
    this.updated = updated;
  }

  public DRSBundle version(String version) {
    this.version = version;
    return this;
  }

   /**
   * A string representing a version. (Some systems may use checksum, a RFC3339 timestamp, or an incrementing version number.)
   * @return version
  **/
  @ApiModelProperty(value = "A string representing a version. (Some systems may use checksum, a RFC3339 timestamp, or an incrementing version number.)")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public DRSBundle checksums(List<DRSChecksum> checksums) {
    this.checksums = checksums;
    return this;
  }

  public DRSBundle addChecksumsItem(DRSChecksum checksumsItem) {
    this.checksums.add(checksumsItem);
    return this;
  }

   /**
   * The checksum of the Data Bundle. At least one checksum must be provided.  The Data Bundle checksum is computed over a sorted concatenation of all the checksums (names not included) within the top-level &#39;contents&#39; of the Bundle (not recursive). The list of Data Object or Bundle checksums are sorted alphabetically (hex-code) before concatenation and a further checksum is performed on the concatenated checksum value. Example below: Data Ojects:   md5(DO1) &#x3D; 72794b6d30bc86d92e40a1aa65c880b8   md5(DO2) &#x3D; 5e089d29a18954e68a78ee6a3c6edabd Data Bundle: DB1 &#x3D; md5( concat( sort( md5(DO1), md5(DO2) ) ) )     &#x3D; md5( concat( sort( 72794b6d30bc86d92e40a1aa65c880b8, 5e089d29a18954e68a78ee6a3c6edabd ) ) )     &#x3D; md5( concat( 5e089d29a18954e68a78ee6a3c6edabd, 72794b6d30bc86d92e40a1aa65c880b8 ) )     &#x3D; md5( 5e089d29a18954e68a78ee6a3c6edabd72794b6d30bc86d92e40a1aa65c880b8 )     &#x3D; f7a29a0422e7d870b10839ad6c985079
   * @return checksums
  **/
  @ApiModelProperty(required = true, value = "The checksum of the Data Bundle. At least one checksum must be provided.  The Data Bundle checksum is computed over a sorted concatenation of all the checksums (names not included) within the top-level 'contents' of the Bundle (not recursive). The list of Data Object or Bundle checksums are sorted alphabetically (hex-code) before concatenation and a further checksum is performed on the concatenated checksum value. Example below: Data Ojects:   md5(DO1) = 72794b6d30bc86d92e40a1aa65c880b8   md5(DO2) = 5e089d29a18954e68a78ee6a3c6edabd Data Bundle: DB1 = md5( concat( sort( md5(DO1), md5(DO2) ) ) )     = md5( concat( sort( 72794b6d30bc86d92e40a1aa65c880b8, 5e089d29a18954e68a78ee6a3c6edabd ) ) )     = md5( concat( 5e089d29a18954e68a78ee6a3c6edabd, 72794b6d30bc86d92e40a1aa65c880b8 ) )     = md5( 5e089d29a18954e68a78ee6a3c6edabd72794b6d30bc86d92e40a1aa65c880b8 )     = f7a29a0422e7d870b10839ad6c985079")
  public List<DRSChecksum> getChecksums() {
    return checksums;
  }

  public void setChecksums(List<DRSChecksum> checksums) {
    this.checksums = checksums;
  }

  public DRSBundle description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A human readable description of the Data Bundle.
   * @return description
  **/
  @ApiModelProperty(value = "A human readable description of the Data Bundle.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DRSBundle aliases(List<String> aliases) {
    this.aliases = aliases;
    return this;
  }

  public DRSBundle addAliasesItem(String aliasesItem) {
    if (this.aliases == null) {
      this.aliases = new ArrayList<>();
    }
    this.aliases.add(aliasesItem);
    return this;
  }

   /**
   * A list of strings that can be used to find other metadata about this Data Bundle from external metadata sources. These aliases can be used to represent the Data Bundle&#39;s secondary accession numbers or external GUIDs.
   * @return aliases
  **/
  @ApiModelProperty(value = "A list of strings that can be used to find other metadata about this Data Bundle from external metadata sources. These aliases can be used to represent the Data Bundle's secondary accession numbers or external GUIDs.")
  public List<String> getAliases() {
    return aliases;
  }

  public void setAliases(List<String> aliases) {
    this.aliases = aliases;
  }

  public DRSBundle contents(List<DRSBundleObject> contents) {
    this.contents = contents;
    return this;
  }

  public DRSBundle addContentsItem(DRSBundleObject contentsItem) {
    this.contents.add(contentsItem);
    return this;
  }

   /**
   * The list of Data Objects that this Data Bundle contains.
   * @return contents
  **/
  @ApiModelProperty(required = true, value = "The list of Data Objects that this Data Bundle contains.")
  public List<DRSBundleObject> getContents() {
    return contents;
  }

  public void setContents(List<DRSBundleObject> contents) {
    this.contents = contents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DRSBundle drSBundle = (DRSBundle) o;
    return Objects.equals(this.id, drSBundle.id) &&
        Objects.equals(this.name, drSBundle.name) &&
        Objects.equals(this.size, drSBundle.size) &&
        Objects.equals(this.created, drSBundle.created) &&
        Objects.equals(this.updated, drSBundle.updated) &&
        Objects.equals(this.version, drSBundle.version) &&
        Objects.equals(this.checksums, drSBundle.checksums) &&
        Objects.equals(this.description, drSBundle.description) &&
        Objects.equals(this.aliases, drSBundle.aliases) &&
        Objects.equals(this.contents, drSBundle.contents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, size, created, updated, version, checksums, description, aliases, contents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DRSBundle {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    checksums: ").append(toIndentedString(checksums)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

